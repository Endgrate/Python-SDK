# coding: utf-8

"""
    Endgrate API

    Endgrate API Reference

    The version of the OpenAPI document: 1.0.0
    Contact: team@endgrate.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from endgrate.models.configuration_callback_schema_schemas_value import ConfigurationCallbackSchemaSchemasValue

class TestConfigurationCallbackSchemaSchemasValue(unittest.TestCase):
    """ConfigurationCallbackSchemaSchemasValue unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConfigurationCallbackSchemaSchemasValue:
        """Test ConfigurationCallbackSchemaSchemasValue
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConfigurationCallbackSchemaSchemasValue`
        """
        model = ConfigurationCallbackSchemaSchemasValue()
        if include_optional:
            return ConfigurationCallbackSchemaSchemasValue(
                integration_info = endgrate.models.configuration_callback_schema_schemas_value_integration_info.ConfigurationCallbackSchema_schemas_value_integration_info(
                    name = '', 
                    display_name = '', 
                    method = 'IMPORT', 
                    endgrate_type = '', 
                    supports_associations = True, ),
                integration = '',
                var_schema = endgrate.models.configuration_callback_schema_schemas_value_schema.ConfigurationCallbackSchema_schemas_value_schema(
                    type = 'object', 
                    associations = True, 
                    endgrate_type = '', 
                    properties = {email={type=string, format=email}, first_name={type=string}, last_name={type=string}, full_name={type=string}, company={type=string}, age={type=number}, is_employed={type=boolean}, lifecyclestage={title=Lifecycle Stage, type=string}}, 
                    required = [
                        ''
                        ], 
                    title = '', 
                    session_method = '', ),
                passthrough_fields = endgrate.models.configuration_callback_schema_schemas_value_passthrough_fields.ConfigurationCallbackSchema_schemas_value_passthrough_fields(
                    properties = {lifecyclestage={title=Lifecycle Stage, type=string}}, 
                    required = [
                        ''
                        ], )
            )
        else:
            return ConfigurationCallbackSchemaSchemasValue(
        )
        """

    def testConfigurationCallbackSchemaSchemasValue(self):
        """Test ConfigurationCallbackSchemaSchemasValue"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
