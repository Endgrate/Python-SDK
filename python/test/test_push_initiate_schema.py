# coding: utf-8

"""
    Endgrate API

    Endgrate API Reference

    The version of the OpenAPI document: 1.0.0
    Contact: team@endgrate.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from endgrate.models.push_initiate_schema import PushInitiateSchema

class TestPushInitiateSchema(unittest.TestCase):
    """PushInitiateSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PushInitiateSchema:
        """Test PushInitiateSchema
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PushInitiateSchema`
        """
        model = PushInitiateSchema()
        if include_optional:
            return PushInitiateSchema(
                completed_webhook = endgrate.models.webhook_schema.WebhookSchema(
                    endpoint = '', 
                    metadata = {user_id=1}, ),
                configuration_webhook = endgrate.models.webhook_schema.WebhookSchema(
                    endpoint = '', 
                    metadata = {user_id=1}, ),
                error_webhook = endgrate.models.webhook_schema.WebhookSchema(
                    endpoint = '', 
                    metadata = {user_id=1}, ),
                field_selection = True,
                prepopulate = None,
                provider = '',
                redirect_url = '',
                resource_selection = True,
                save_session = True,
                var_schema = [
                    endgrate.models.endgrate_json_schema.EndgrateJsonSchema(
                        type = 'object', 
                        associations = True, 
                        endgrate_type = 'accounting-address', 
                        properties = {email={type=string, format=email}, first_name={type=string}, last_name={type=string}, full_name={type=string}, company={type=string}, age={type=number}, is_employed={type=boolean}, lifecyclestage={title=Lifecycle Stage, type=string}}, 
                        required = [
                            ''
                            ], 
                        title = '', )
                    ],
                schema_selection = True,
                statistics = True,
                webhook_concurrency = True,
                bypass_ui = True
            )
        else:
            return PushInitiateSchema(
        )
        """

    def testPushInitiateSchema(self):
        """Test PushInitiateSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
