# coding: utf-8

"""
    Endgrate API

    Endgrate API Reference

    The version of the OpenAPI document: 1.0.0
    Contact: team@endgrate.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from endgrate.models.data_callback_schema import DataCallbackSchema

class TestDataCallbackSchema(unittest.TestCase):
    """DataCallbackSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DataCallbackSchema:
        """Test DataCallbackSchema
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DataCallbackSchema`
        """
        model = DataCallbackSchema()
        if include_optional:
            return DataCallbackSchema(
                success = True,
                transfer_id = '',
                session_id = '',
                metadata = None,
                endgrate = endgrate.models.completed_callback_schema_endgrate.CompletedCallbackSchema_endgrate(
                    endgrate_type = '', ),
                completed = True,
                transfer_data = [
                    endgrate.models.transfer_data_schema_inner.TransferDataSchema_inner(
                        id = '', 
                        data = {email=susan@youtube.com, first_name=Susan, last_name=Wojicki, full_name=Susan Wojicki, company=YouTube, is_employed=true, age=37, lifecyclestage=lead}, 
                        associations = {
                            'key' : null
                            }, )
                    ]
            )
        else:
            return DataCallbackSchema(
        )
        """

    def testDataCallbackSchema(self):
        """Test DataCallbackSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
